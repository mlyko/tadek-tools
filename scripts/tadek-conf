#!/usr/bin/env python

################################################################################
##                                                                            ##
## This file is a part of TADEK.                                              ##
##                                                                            ##
## TADEK - Test Automation in a Distributed Environment                       ##
## (http://tadek.comarch.com)                                                 ##
##                                                                            ##
## Copyright (C) 2011 Comarch S.A.                                            ##
## All rights reserved.                                                       ##
##                                                                            ##
## TADEK is free software for non-commercial purposes. For commercial ones    ##
## we offer a commercial license. Please check http://tadek.comarch.com for   ##
## details or write to tadek-licenses@comarch.com                             ##
##                                                                            ##
## You can redistribute it and/or modify it under the terms of the            ##
## GNU General Public License as published by the Free Software Foundation,   ##
## either version 3 of the License, or (at your option) any later version.    ##
##                                                                            ##
## TADEK is distributed in the hope that it will be useful,                   ##
## but WITHOUT ANY WARRANTY; without even the implied warranty of             ##
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              ##
## GNU General Public License for more details.                               ##
##                                                                            ##
## You should have received a copy of the GNU General Public License          ##
## along with TADEK bundled with this file in the file LICENSE.               ##
## If not, see http://www.gnu.org/licenses/.                                  ##
##                                                                            ##
## Please notice that Contributor Agreement applies to any contribution       ##
## you make to TADEK. The Agreement must be completed, signed and sent        ##
## to Comarch before any contribution is made. You should have received       ##
## a copy of Contribution Agreement along with TADEK bundled with this file   ##
## in the file CONTRIBUTION_AGREEMENT.pdf or see http://tadek.comarch.com     ##
## or write to tadek-licenses@comarch.com                                     ##
##                                                                            ##
################################################################################

import sys
import optparse

from tadek.core import config
from tadek.core import settings

USAGE = '''%prog OPTION [ARGUMENT]...'''

DESC = '''tadek-conf is a tool to manipulate the settings common for all
TADEK programs (by default) or only for a specified program. TADEK settings is
split on files (*.conf) in INI format. Files contain sections which consist of
options with their respective values.'''

if __name__ == "__main__":
    opt = optparse.OptionParser(prog="tadek-conf", usage=USAGE,
                                description=DESC, version=config.VERSION_STRING)
    opt.add_option("-p", "--prog", dest="prog", action="store",
                   help="set the program name for which "
                        "the settings is read/modified",
                   metavar="PROGRAM_NAME")
    opt.add_option("-g", "--get", dest="get", action="store_true",
                   help="get an option value or a list of available file names"
                        " or sections or options of TADEK settings")
    opt.add_option("-s", "--set", dest="set", action="store_true",
                   help="set an option value or create a section or "
                        "an option to TADEK settings")
    opt.add_option("-r", "--remove", dest="remove", action="store_true",
                   help="remove either a file or a section or an option from"
                        " TADEK settings")
    opt.add_option("--reset", dest="reset", action="store_true",
                   help="reset TADEK settings to default one")
    opts, args = opt.parse_args()
    if opts.prog:
        config.setProgramName(opts.prog)
    if [opts.reset, opts.get, opts.set, opts.remove].count(True) > 1:
        opt.error("Options: --reset, --get, --set, --remove "
                  "are mutually exclusive.")
    elif [opts.reset, opts.get, opts.set, opts.remove].count(True) < 1:
        opt.error("No option given.")

    # RESET
    if opts.reset is not None:
    	settings.reset()
    # GET
    elif opts.get is not None:
        if len(args) > 3:
            opt.error("too many arguments for -g/--get option")
        retval = settings.get(*args)
        if retval is None:
            sys.stderr.write("The given path does not exist: /%s\n"
                % '/'.join(args))
            sys.exit(2)
        if hasattr(retval, "__getitem__"):
            for val in retval:
                val = val.name() if hasattr(val, "name") else val
                print " /%s" % '/'.join(args + [val])
        else:
            print " /%s: %s" % ('/'.join(args), retval)
    # SET
    elif opts.set is not None:
        if len(args) < 2:
            opt.error("-s/--set option requires at least two arguments")
        elif len(args) > 4:
            opt.error("too many arguments for -s/--set option")
        settings.set(*args)
    # REMOVE
    elif opts.remove is not None:
        if len(args) < 1:
            opt.error("-r|--remove option requires at least one argument")
        elif len(args) > 3:
            opt.error("too many arguments for -r/--remove option")
        settings.remove(*args)

