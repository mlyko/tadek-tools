#!/usr/bin/env python

################################################################################
##                                                                            ##
## This file is a part of TADEK.                                              ##
##                                                                            ##
## TADEK - Test Automation in a Distributed Environment                       ##
## (http://tadek.comarch.com)                                                 ##
##                                                                            ##
## Copyright (C) 2011 Comarch S.A.                                            ##
## All rights reserved.                                                       ##
##                                                                            ##
## TADEK is free software for non-commercial purposes. For commercial ones    ##
## we offer a commercial license. Please check http://tadek.comarch.com for   ##
## details or write to tadek-licenses@comarch.com                             ##
##                                                                            ##
## You can redistribute it and/or modify it under the terms of the            ##
## GNU General Public License as published by the Free Software Foundation,   ##
## either version 3 of the License, or (at your option) any later version.    ##
##                                                                            ##
## TADEK is distributed in the hope that it will be useful,                   ##
## but WITHOUT ANY WARRANTY; without even the implied warranty of             ##
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              ##
## GNU General Public License for more details.                               ##
##                                                                            ##
## You should have received a copy of the GNU General Public License          ##
## along with TADEK bundled with this file in the file LICENSE.               ##
## If not, see http://www.gnu.org/licenses/.                                  ##
##                                                                            ##
## Please notice that Contributor Agreement applies to any contribution       ##
## you make to TADEK. The Agreement must be completed, signed and sent        ##
## to Comarch before any contribution is made. You should have received       ##
## a copy of Contribution Agreement along with TADEK bundled with this file   ##
## in the file CONTRIBUTION_AGREEMENT.pdf or see http://tadek.comarch.com     ##
## or write to tadek-licenses@comarch.com                                     ##
##                                                                            ##
################################################################################

import os
import sys
import optparse

from tadek.core import config
config.setProgramName("tadek")

from tadek import testcases
from tadek.core import log
from tadek.core.devices import DEFAULT_IP, DEFAULT_PORT, CONFIG_NAME

sys.path.insert(0, os.path.join(config.DATA_DIR, "tools"))

import test
import utils

_TEST_DIR = testcases.__path__[0]

_USAGE = '''%prog [OPTION]... [TESTPATH]...'''

_DESC = '''%%prog is a tool to execute test cases written with TADEK. 
Tests cases can be executed locally or remotely on specified devices.

Arguments are list of paths to test cases. 
Default directory for test cases is located in %s.
  
Examples of use:
    Execute all available test cases of all applications on default device:
    $ %%prog

    Run all test cases defined in 'testmodule' module of 'testapp' application
    on device 'testdevice' from configuration:
    $ %%prog -d testdevice testapp.testmodule

    Run on default device all test cases defined in 'testmodule' module of
    'testapp' application grouped in two classes: 'TestClass1', 'TestClass2':
    $ %%prog testapp.testmodule.TestClass1 testapp.testmodule.TestClass2
    
    Run all test cases defined in 'testmodule' module of 'testapp' application
    placed under path '/home/user/customCases' on two devices, 
    the first is 'testdevice' from configuration file and the second
    is a device with an address 192.168.23.129:
    $ %%prog -d testdevice -d 192.168.23.129 -l /home/user/customCases testapp.testmodule
''' % (_TEST_DIR, )

_DEVICE_HELP = '''OPTIONAL. Specify a device on which tests will run. The device
can be specified in two different ways: device name from configuration file
%s.conf or as IP[:port(default %d)]. If there is no device specified, a default
device %s:%d will be used. This option can be used multiple times.
''' % (CONFIG_NAME, DEFAULT_PORT, DEFAULT_IP, DEFAULT_PORT)

_LOCATION_HELP = '''OPTIONAL. Specify location of test case directories.
Paths can be relative or absolute. It can be used multiple times.
'''

if __name__ == '__main__':
    try:
        parser = optparse.OptionParser(usage=_USAGE, description=_DESC,
                                       formatter=utils.LineFormatter(),
                                       version=config.VERSION_STRING)
        parser.add_option('-d', '--device', action="append", dest='device',
                          help=_DEVICE_HELP)
        parser.add_option('-l', '--location', action="append", dest='location',
                          help=_LOCATION_HELP)
        opts, args = parser.parse_args()
        log.info("Got options and arguments: %s, %s" % (opts, args))

        result = test.runTestCases(args, opts.location if opts.location else [],
                                   utils.getDevices(opts.device))
        test.printResult(result)
    except KeyboardInterrupt:
        print >> sys.stderr, "\nRequest interrupted."
    except Exception, err:
        utils.exitWithError(err)

